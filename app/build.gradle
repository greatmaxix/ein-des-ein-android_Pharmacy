plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id "com.google.firebase.appdistribution"
}

android {

    compileSdkVersion rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.pulse"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'

        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = "${variant.applicationId}-v.${variant.versionName}(${variant.versionCode})-${variant.getName()}.apk"
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    signingConfigs {
        config {
            keyAlias rootProject.ext.alias
            keyPassword rootProject.ext.password_key
            storePassword rootProject.ext.password_store
            storeFile file(rootProject.ext.keystore)
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.config
            buildConfigField "Boolean", "DEVELOPER_SERVER", "false"
        }
        qa {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.config
            versionNameSuffix '-qa'
            buildConfigField "Boolean", "DEVELOPER_SERVER", "true"
            firebaseAppDistribution {
                releaseNotes = rootProject.ext.releaseNotes
                testers="developereinios@gmail.com"
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.config
            versionNameSuffix '-dg'
            buildConfigField "Boolean", "DEVELOPER_SERVER", "true"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xopt-in=kotlin.OptIn"
        ]
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation("org.apache.commons:commons-lang3:3.11") // for Date extensions only
    implementation("com.jakewharton.timber:timber:4.7.1")
    implementation("com.github.fondesa:kpermissions:3.1.2")
    implementation("com.budiyev.android:code-scanner:2.1.0")
    implementation("com.github.onimur:handle-path-oz:1.0.7")
    // Google
    implementation("com.google.android.material:material:1.2.1")
    implementation("com.google.firebase:firebase-analytics:18.0.0")
    implementation("com.google.firebase:firebase-crashlytics:17.2.2")
    implementation("com.google.android.gms:play-services-maps:17.0.0")
    // Flow
    implementation("io.github.reactivecircus.flowbinding:flowbinding-android:1.0.0-beta01")
    // AndroidX
    implementation("androidx.core:core-ktx:1.3.2")
    implementation("androidx.browser:browser:1.2.0")
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("androidx.appcompat:appcompat:1.2.0")
    implementation("androidx.viewpager2:viewpager2:1.0.0")
    implementation("androidx.work:work-runtime-ktx:2.4.0")
    implementation("androidx.collection:collection-ktx:1.1.0")
    implementation("androidx.activity:activity-ktx:1.2.0-beta01")
    implementation("androidx.fragment:fragment-ktx:1.3.0-beta01")
    implementation("androidx.constraintlayout:constraintlayout:2.0.3")
    implementation("androidx.paging:paging-runtime-ktx:3.0.0-alpha08")
    implementation("androidx.recyclerview:recyclerview:1.2.0-alpha06")
    // Koin
    implementation("org.koin:koin-androidx-scope:$rootProject.ext.deps.versions.koin")
    implementation("org.koin:koin-androidx-fragment:$rootProject.ext.deps.versions.koin")
    implementation("org.koin:koin-androidx-viewmodel:$rootProject.ext.deps.versions.koin")
    // Kotlin
    implementation("org.jetbrains.kotlin:kotlin-reflect:$rootProject.ext.deps.versions.kotlin")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.ext.deps.versions.kotlin")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.deps.versions.coroutines")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.deps.versions.coroutines")
    // REST
    implementation("com.squareup.retrofit2:retrofit:$rootProject.ext.deps.versions.retrofit")
    implementation("com.squareup.retrofit2:converter-gson:$rootProject.ext.deps.versions.retrofit")
    implementation("com.squareup.okhttp3:okhttp:$rootProject.ext.deps.versions.okhttp")
    implementation("com.github.ihsanbal:LoggingInterceptor:3.1.0")
    // Navigation
    implementation("androidx.navigation:navigation-ui-ktx:$rootProject.ext.deps.versions.navigation")
    implementation("androidx.navigation:navigation-runtime-ktx:$rootProject.ext.deps.versions.navigation")
    implementation("androidx.navigation:navigation-fragment-ktx:$rootProject.ext.deps.versions.navigation")
    // Lifecycle
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.ext.deps.versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-common-java8:$rootProject.ext.deps.versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.ext.deps.versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-extensions:$rootProject.ext.deps.versions.lifecycle")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.ext.deps.versions.lifecycle")
    // Room
    implementation("androidx.room:room-runtime:$rootProject.ext.deps.versions.room")
    implementation("androidx.room:room-ktx:$rootProject.ext.deps.versions.room")
    kapt("androidx.room:room-compiler:$rootProject.ext.deps.versions.room")
    // Glide
    implementation("com.github.bumptech.glide:glide:$rootProject.ext.deps.versions.glide")
    kapt("com.github.bumptech.glide:compiler:$rootProject.ext.deps.versions.glide")
    // SDP/SSP
    implementation("com.intuit.sdp:sdp-android:$rootProject.ext.deps.versions.sdp")
    implementation("com.intuit.ssp:ssp-android:$rootProject.ext.deps.versions.sdp")

    implementation "com.github.heremaps:oksse:$rootProject.ext.deps.versions.oksse"
    implementation "com.kirich1409.android-notification-dsl:core:$rootProject.ext.deps.versions.notificationsDsl"
    implementation "com.kirich1409.android-notification-dsl:extensions:$rootProject.ext.deps.versions.notificationsDsl"
}